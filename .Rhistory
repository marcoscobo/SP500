install.packages("devtools")
3+3
library(devtools)
install.packages("lattice")
library(lattice)
iris.kagg <- read.table(file = ".../Iris.csv", sep = ",")
iris.kagg <- read.table(file = ".../Iris.csv", sep = ",")
iris.kagg <- read.table(file = "Iris.csv", sep = ",")
iris.kagg <- read.table(file = "/home/marcoscobo/Descargas/Iris.csv", sep = ",")
setosa <- subset(iris, Species == "setosa")
versicolor <- subset(iris, Species == "versicolor")
virginica <- subset(iris, Species == "virginica")
xyplot(Sepal.Width ~ Sepal.Length | Species, data = iris)
splom(~iris[1:4], groups = Species, data = iris, col = c("red", "orange", "yellow"))
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
#library(tidyverse)
library("ggplot2")
library("dplyr")
x <- c("ggplot2","dplyr","tidyr","readr","purrr","tibble","stringr","forcats")
install.packages(x)
install.packages(x)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
x2 <- c("xml2","ids","httr","readr","gargle","rvest","googledrive","googlesheets4")
install.packages(x2)
library(tidyverse)
install.packages("devtools")
install.packages("devtools")
install.packages("~/Descargas/devtools_2.4.2.tar.gz", repos = NULL, type = "source")
library("devtools")
install.packages("~/Descargas/tidyverse_1.3.1.tar.gz", repos = NULL, type = "source")
install.packages("googledrive")
install.packages("r-essentials")
library(lattice)
iris.kagg <- read.table(file = "/home/marcoscobo/Descargas/Iris.csv", sep = ",")
setosa <- subset(iris, Species == "setosa")
versicolor <- subset(iris, Species == "versicolor")
virginica <- subset(iris, Species == "virginica")
xyplot(Sepal.Width ~ Sepal.Length | Species, data = iris)
#install.packages("lattice")
library(lattice)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("tidyverse")
library(tidyverse)
ggplot(data = iris) +
geom_point(aes(x = Petal.Width, y = Petal.Length))
#install.packages("tidyverse")
library(tidyverse)
ggplot(data = iris) +
geom_point(aes(x = Petal.Width, y = Petal.Length))
# Cargamos el dataframe y cambiamos el formato de las fechas
df <- read.csv("SP500.csv")
df <- read.csv("SP500.csv")
years.to.sim <- 20
number.of.sim <- 10000
anual.rents <- simulate(df, years.to.sim, number.of.sim, plot.n=T, plot.l=T)
source("simulations.R")
anual.rents <- simulate(df, years.to.sim, number.of.sim, plot.n=T, plot.l=T)
source("simulations.R")
source("simulations.R")
df <- read.csv("SP500.csv")
years.to.sim <- 50
number.of.sim <- 150000
df <- read.csv("SP500.csv")
install.packages("arulesViz")
data(“Groceries”)
data('Groceries')
Groceries
data('Groceries')
source("simulations.R")
df <- read.csv("SP500.csv")
years.to.sim <- 20
number.of.sim <- 1000
anual.rents <- simulate(df, years.to.sim, number.of.sim, plot=T)
source("simulations.R")
setwd("~/Escritorio/AlgoTrading/SP500")
source("simulations.R")
df <- read.csv("SP500.csv")
years.to.sim <- 20
number.of.sim <- 1000
anual.rents <- simulate(df, years.to.sim, number.of.sim, plot=T)
source("simulations.R")
df <- read.csv("SP500.csv")
years.to.sim <- 20
number.of.sim <- 1000
anual.rents <- simulate(df, years.to.sim, number.of.sim, plot=T)
simulate <- function(df, years.to.sim, number.of.sim, plot=F){
total.days <- length(df$Date)
days.to.sim <- 252 * years.to.sim
last.init <- total.days - days.to.sim
if (plot == T){
simuls <- matrix(data=NA, nrow=days.to.sim, ncol=number.of.sim)
}
anual.rents <- c()
for (i in 1:number.of.sim){
init.day <- sample(1:last.init, size=1) + 1
last.day <- init.day + days.to.sim - 1
sim.period <- init.day:last.day
sim.sample <- sample(sim.period, replace=T)
sim.diff <- df$Diff_close_div[sim.sample]
anual.rent <- prod(sim.diff) ** (1 / years.to.sim)
anual.rents <- c(anual.rents, anual.rent)
if (plot == T){
simuls[,i] <- cumprod(sim.diff)
}
}
if (plot == T){
plot(simuls[,1], type='l', ylim=c(min(simuls), max(simuls)), main='Simulated yields', xlab='nº of simulation', ylab='simulated yields')
for (i in 2:number.of.sim){
rgb <- sample(50:255, size=3)/255
lines(simuls[,i], col=rgb(rgb[1], rgb[2], rgb[3]))
}
abline(h=1, lwd=2, col='red')
plot(log(simuls[,1]), type='l', ylim=c(min(log(simuls)), max(log(simuls))), main='Simulated yields', xlab='nº of simulation', ylab='log(simulated yields)')
for (i in 2:number.of.sim){
rgb <- sample(1:255, size=3)/255
lines(log(simuls[,i]), col=rgb(rgb[1], rgb[2], rgb[3]))
}
abline(h=0, lwd=2, col='red')
}
return(anual.rents)
}
anual.rents <- simulate(df, years.to.sim, number.of.sim, plot=T)
anual.rents <- anual.rents - 0.001
hist(anual.rents, breaks=seq(min(anual.rents) - 0.01, max(anual.rents) + 0.01, by=0.01), main='Distribution of anual yields')
par(mfrow = c(2, 1))
hist(anual.rents, breaks=seq(min(anual.rents) - 0.005, max(anual.rents) + 0.005, by=0.005), prob=T, main='Density Function')
lines(density(anual.rents), col='red')
plot(ecdf(anual.rents), col='red', col.01line=NULL, main='Cumulative Distribution Function')
source("simulations.R")
number.of.sim <- 1000000
anual.rents <- simulate.apply(df, years.to.sim, number.of.sim, paral=T)
anual.rents <- anual.rents - 0.001
par(mfrow = c(2, 1))
hist(anual.rents, breaks=seq(min(anual.rents) - 0.005, max(anual.rents) + 0.005, by=0.005), prob=T, main='Density Function')
lines(density(anual.rents), col='red')
plot(ecdf(anual.rents), col='red', col.01line=NULL, main='Cumulative Distribution Function')
calc.prob <- function(x, simuls){
return(length(simuls[simuls <= x]) / length(simuls))
}
prob1 <- calc.prob(1, anual.rents)
sprintf('Probabilidad de rent <= 1 a %i años: %4f', years.to.sim, prob1)
prob2 <- 1 - calc.prob(1.05, anual.rents)
sprintf('Probabilidad de rent > 1.05 a %i años: %4f', years.to.sim, prob2)
plot(probs, type='l', main='Probability of anual yield <= 0%')
number.of.sim <- 1000
probs <- c()
for (year in 1:6){
print(year)
anual.rents <- simulate.apply(df, year, number.of.sim, paral=T) - 0.001
probs <- c(probs, calc.prob(1, anual.rents))
}
plot(probs, type='l', main='Probability of anual yield <= 0%')
par(mfrow = c(1, 1))
plot(probs, type='l', main='Probability of anual yield <= 0%')
plot(probs, type='l', main='Probability of anual yield <= 0%', xlab='nº of years', ylab='Probability')
abline(h=0.01, lty=3, col='red')
## Part I
source("simulations.R")
df <- read.csv("SP500.csv")
years.to.sim <- 20
number.of.sim <- 1000
anual.rents <- simulate(df, years.to.sim, number.of.sim, plot=T)
anual.rents <- anual.rents - 0.001
hist(anual.rents, breaks=seq(min(anual.rents) - 0.01, max(anual.rents) + 0.01, by=0.01), main='Distribution of anual yields')
hist(anual.rents, breaks=seq(min(anual.rents) - 0.005, max(anual.rents) + 0.005, by=0.005), prob=T, main='Density Function')
lines(density(anual.rents), col='red')
plot(ecdf(anual.rents), col='red', col.01line=NULL, main='Cumulative Distribution Function')
plot(probs, type='l', main='Probability of anual yield <= 0%', xlab='nº of years', ylab='Probability')
probs <- c()
plot(probs, type='l', main='Probability of anual yield <= 0%', xlab='nº of years', ylab='Probability')
probs <- c(1,2)
plot(probs, type='l', main='Probability of anual yield <= 0%', xlab='nº of years', ylab='Probability')
plot(probs, type='l', main='Probability of anual yield <= 0%', xlab='number of years', ylab='Probability')
source("simulations.R")
df <- read.csv("SP500.csv")
years.to.sim <- 20
number.of.sim <- 1000
anual.rents <- simulate(df, years.to.sim, number.of.sim, plot=T)
anual.rents <- anual.rents - 0.001
hist(anual.rents, breaks=seq(min(anual.rents) - 0.01, max(anual.rents) + 0.01, by=0.01), main='Distribution of anual yields')
## Part I
source("simulations.R")
df <- read.csv("SP500.csv")
years.to.sim <- 20
number.of.sim <- 1000
anual.yields <- simulate(df, years.to.sim, number.of.sim, plot=T)
anual.yields <- anual.yields - 0.001
hist(anual.yields, breaks=seq(min(anual.yields) - 0.01, max(anual.yields) + 0.01, by=0.01), main='Distribution of anual yields')
par(mfrow = c(2, 1))
hist(anual.yields, breaks=seq(min(anual.yields) - 0.005, max(anual.yields) + 0.005, by=0.005), prob=T, main='Density Function')
lines(density(anual.yields), col='red')
plot(ecdf(anual.yields), col='red', col.01line=NULL, main='Cumulative Distribution Function')
source("simulations.R")
number.of.sim <- 1000000
anual.yields <- simulate.apply(df, years.to.sim, number.of.sim, paral=T)
anual.yields <- anual.yields - 0.001
par(mfrow = c(2, 1))
hist(anual.yields, breaks=seq(min(anual.yields) - 0.005, max(anual.yields) + 0.005, by=0.005), prob=T, main='Density Function')
lines(density(anual.yields), col='red')
plot(ecdf(anual.yields), col='red', col.01line=NULL, main='Cumulative Distribution Function')
calc.prob <- function(x, simuls){
return(length(simuls[simuls <= x]) / length(simuls))
}
prob1 <- calc.prob(1, anual.yields)
sprintf('Probability of anual yield <= 1 for %i years: %4f', years.to.sim, prob1)
prob2 <- 1 - calc.prob(1.05, anual.yields)
sprintf('Probability of anual yield > 1.05 for %i years: %4f', years.to.sim, prob2)
number.of.sim <- 100000
probs <- c()
for (year in 1:60){
print(year)
anual.yields <- simulate.apply(df, year, number.of.sim, paral=T) - 0.001
probs <- c(probs, calc.prob(1, anual.yields))
}
par(mfrow = c(1, 1))
plot(probs, type='l', main='Probability of anual yield <= 0%', xlab='number of years', ylab='Probability')
abline(h=0.01, lty=3, col='red')
## Part I
# Load simulations function
source("simulations.R")
# Load historical data
df <- read.csv("SP500.csv")
# Define the simulated period
years.to.sim <- 20
# Define the number of simulations to do
number.of.sim <- 1000
# Get the simulated anual yields
anual.yields <- simulate(df, years.to.sim, number.of.sim, plot=F)
# Discount commissions
anual.yields <- anual.yields - 0.001
# Histogram of anual yields
hist(anual.yields, breaks=seq(min(anual.yields) - 0.01, max(anual.yields) + 0.01, by=0.01), main='Distribution of anual yields')
# Histogram of anual yields
hist(anual.yields, breaks=seq(min(anual.yields) - 0.01, max(anual.yields) + 0.01, by=0.01), main='Distribution of anual yields', cex.axis=1.5, cex.main=1.5)
# Histogram of anual yields
hist(anual.yields, breaks=seq(min(anual.yields) - 0.01, max(anual.yields) + 0.01, by=0.01), main='Distribution of anual yields', cex.lab=1.5, cex.main=1.5)
# Histogram of anual yields
hist(anual.yields, breaks=seq(min(anual.yields) - 0.01, max(anual.yields) + 0.01, by=0.01), main='Distribution of anual yields', cex.axis=1.5, cex.main=1.5, cex.lab=1.5)
# Divide the frame
par(mfrow = c(2, 1))
# Histogram of anual yields
hist(anual.yields, breaks=seq(min(anual.yields) - 0.005, max(anual.yields) + 0.005, by=0.005), prob=T, main='Density Function', cex.axis=1.5, cex.main=1.5, cex.lab=1.5)
# Add the density function
lines(density(anual.yields), col='red')
# Plot the cumulative distribution function
plot(ecdf(anual.yields), col='red', col.01line=NULL, main='Cumulative Distribution Function', cex.axis=1.5, cex.main=1.5, cex.lab=1.5)
## Part I
# Load simulations function
source("simulations.R")
# Load historical data
df <- read.csv("SP500.csv")
# Define the simulated period
years.to.sim <- 20
# Define the number of simulations to do
number.of.sim <- 1000
# Get the simulated anual yields
anual.yields <- simulate(df, years.to.sim, number.of.sim, plot=T)
# Discount commissions
anual.yields <- anual.yields - 0.001
# Histogram of anual yields
hist(anual.yields, breaks=seq(min(anual.yields) - 0.01, max(anual.yields) + 0.01, by=0.01), main='Distribution of anual yields', cex.axis=1.5, cex.main=1.5, cex.lab=1.5)
# Load simulations function
source("simulations.R")
# Load historical data
df <- read.csv("SP500.csv")
# Define the simulated period
years.to.sim <- 20
# Define the number of simulations to do
number.of.sim <- 1000
# Get the simulated anual yields
anual.yields <- simulate(df, years.to.sim, number.of.sim, plot=T)
# Discount commissions
anual.yields <- anual.yields - 0.001
# Histogram of anual yields
hist(anual.yields, breaks=seq(min(anual.yields) - 0.01, max(anual.yields) + 0.01, by=0.01), main='Distribution of anual yields', cex.axis=1.5, cex.main=1.5, cex.lab=1.5)
