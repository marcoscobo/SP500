setwd("~/Escritorio/AlgoTrading/SP500")
source("simulations_apply.R")
df <- read.csv("SP500.csv")
years.to.sim <- 25
number.of.sim <- 1000
library(nortest); x11(); par(mfrow = c(2, 2))
number.of.sim <- 100
set.seed(0)
anual.rents <- simulate(df, years.to.sim, number.of.sim)
hist(anual.rents, breaks=seq(min(anual.rents) - 0.01, max(anual.rents) + 0.1, by=0.005), prob=T, main='100')
#lines(density(anual.rents), xlim=c(min(anual.rents) - 0.01, max(anual.rents) + 0.1))
curve(dnorm(x, mean=mean(anual.rents), sd=sd(anual.rents)), min(anual.rents) - 0.01, max(anual.rents) + 0.1, add=T, col='red')
print('Test para 100 sim')
lillie.test(anual.rents)
number.of.sim <- 1000
set.seed(0)
anual.rents <- simulate(df, years.to.sim, number.of.sim)
hist(anual.rents, breaks=seq(min(anual.rents) - 0.01, max(anual.rents) + 0.1, by=0.005), prob=T, main='1000')
#lines(density(anual.rents), xlim=c(min(anual.rents) - 0.01, max(anual.rents) + 0.1))
curve(dnorm(x, mean=mean(anual.rents), sd=sd(anual.rents)), min(anual.rents) - 0.01, max(anual.rents) + 0.1, add=T, col='red')
print('Test para 1000 sim')
lillie.test(anual.rents)
number.of.sim <- 10000
set.seed(0)
anual.rents <- simulate(df, years.to.sim, number.of.sim)
hist(anual.rents, breaks=seq(min(anual.rents) - 0.01, max(anual.rents) + 0.1, by=0.005), prob=T, main='10000')
#lines(density(anual.rents), xlim=c(min(anual.rents) - 0.01, max(anual.rents) + 0.1))
curve(dnorm(x, mean=mean(anual.rents), sd=sd(anual.rents)), min(anual.rents) - 0.01, max(anual.rents) + 0.1, add=T, col='red')
print('Test para 10000 sim')
lillie.test(anual.rents)
number.of.sim <- 50000
set.seed(0)
anual.rents <- simulate(df, years.to.sim, number.of.sim)
hist(anual.rents, breaks=seq(min(anual.rents) - 0.01, max(anual.rents) + 0.1, by=0.005), prob=T, main='50000')
#lines(density(anual.rents), xlim=c(min(anual.rents) - 0.01, max(anual.rents) + 0.1))
curve(dnorm(x, mean=mean(anual.rents), sd=sd(anual.rents)), min(anual.rents) - 0.01, max(anual.rents) + 0.1, add=T, col='red')
print('Test para 50000 sim')
lillie.test(anual.rents)
